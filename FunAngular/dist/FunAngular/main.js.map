{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/forbidden/forbidden.component.css","webpack:///./src/app/forbidden/forbidden.component.html","webpack:///./src/app/forbidden/forbidden.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/login/login.service.ts","webpack:///./src/app/user/registration/registration.component.css","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/registration/registration.service.ts","webpack:///./src/app/user/registration/registration.validators.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,2I;;;;;;;;;;;ACA/D,wG;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACc;AACD;AAC6B;AACrB;AACR;AACR;AACuB;AACZ;AAC+B;AAExF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE;IAChD;QACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa;QACtC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+FAAqB,EAAE;YAC1D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qGAAsB,EAAC;SAC7D;KACF;IACD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAE,IAAI,EAAE,EAAE,cAAc,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE;CAC5G,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/B7B,+DAA+D,+H;;;;;;;;;;;ACA/D,qZ;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACkC;AACnB;AACf;AACsC;AAEhC;AACO;AAC6B;AAC9B;AACS;AAEiB;AACrB;AACJ;AACJ;AACQ;AACD;AACY;AACE;AACiB;AA4BxF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,+FAAqB;gBACrB,2EAAc;gBACd,mEAAa;gBACb,sEAAc;gBACd,kFAAkB;gBAClB,oFAAe;gBACf,qGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,oEAAgB;gBAChB,mEAAmB;gBACnB,qEAAgB;gBAChB,uDAAY,CAAC,OAAO,EAAE;aACvB;YACD,SAAS,EAAE,CAAC,4FAAmB,EAAE,uEAAY,EAAE,+DAAW,EAAE;oBAC1D,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,uEAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ,CAAC;YACF,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACjDqB;AACiE;AAEjE;AAK3C;IAEE,mBAAoB,MAAc,EAAU,aAA4B;QAApD,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE7E,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACzC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAkB,CAAC;YACzD,IAAI,KAAK,EAAE;gBACT,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACvB,OAAO,IAAI,CAAC;qBACT;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACrC,OAAO,KAAK,CAAC;iBACd;aACF;YACD,OAAO,IAAI,CAAC;SACb;aACI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC3C,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,6BAAS,GAAT,UAAU,YAAY;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnF,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI;QAC5B,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC1B,IAAI,SAAS,IAAI,OAAO,EAAE;gBACxB,OAAO,GAAG,IAAI,CAAC;gBACf,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IArCU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,sDAAM,EAAyB,wDAAa;OAF7D,SAAS,CAsCrB;IAAD,gBAAC;CAAA;AAtCqB;;;;;;;;;;;;;;;;;;;;ACPqB;AAEN;AACI;AAIzC,8EAA8E;AAE9E;IAEI,yBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAsBC;QArBG,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACvC,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACvF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,0DAAG,CACC,cAAI,IAAM,CAAC,EACX,aAAG;gBACC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;oBACnB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;oBAChC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACzC;qBACI,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAC;oBACtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACxC;YACL,CAAC,CACJ,CACJ;SACJ;;YAEG,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;IAAA,CAAC;IA1BO,eAAe;QAD3B,gEAAU,EAAE;+EAGmB,sDAAM;OAFzB,eAAe,CA2B3B;IAAD,sBAAC;CAAA;AA3B2B;;;;;;;;;;;;ACV5B,mCAAmC,8CAA8C,GAAG,aAAa,oBAAoB,0BAA0B,qBAAqB,wBAAwB,GAAG,6CAA6C,myB;;;;;;;;;;;ACA5O,4kBAA4kB,sU;;;;;;;;;;;;;;;;;;;;ACAtgB;AAC7B;AACiB;AACf;AAO3C;IAEE,yBACU,MAAc,EACd,WAAwB,EACxB,aAA4B;QAF5B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAK3C,kCAAQ,GAAR,cAAc,CAAC;IAEf,mCAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAG,IAAI,CAAC,SAAS,EAAC;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;SAC3C;IACH,CAAC;IAGD,iCAAO,GAAP;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9C,CAAC;IAED,kCAAQ,GAAR;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IA5BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAIkB,sDAAM;YACD,uEAAW;YACT,wDAAa;OAL3B,eAAe,CA6B3B;IAAD,sBAAC;CAAA;AA7B2B;;;;;;;;;;;;ACV5B,+DAA+D,mJ;;;;;;;;;;;ACA/D,8I;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,+DAA+D,uI;;;;;;;;;;;ACA/D,oLAAoL,sBAAsB,mEAAmE,mBAAmB,uB;;;;;;;;;;;;;;;;;;;;;ACA9O;AACT;AACE;AACE;AACQ;AAOrD;IAEE,uBAAoB,MAAc,EACxB,aAA4B,EAC5B,OAAoB,EACpB,WAAwB;QAHd,WAAM,GAAN,MAAM,CAAQ;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAa;QACpB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAMvC,gCAAQ,GAAR;QAAA,iBAUG;QATD,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,SAAS,CACrC,aAAG,IAAM,KAAI,CAAC,WAAW,GAAG,GAAG,EAAC,CAAC,EACjC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAE1C,CAAC;IArBQ,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAG4B,sDAAM;YACT,wDAAa;YACnB,yDAAW;YACP,gEAAW;OALvB,aAAa,CAsBzB;IAAD,oBAAC;CAAA;AAtByB;;;;;;;;;;;;;;;;;;;ACXiB;AACO;AAKlD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,QAAG,GAAG,wCAAwC;IAFN,CAAC;IAIzC,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;QAG9B,8EAA8E;QAC9E,qGAAqG;QACrG,4DAA4D;IAC9D,CAAC;IAbU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,WAAW,CAevB;IAAD,kBAAC;CAAA;AAfuB;;;;;;;;;;;;;;;;;;;ACNmB;AACO;AAKlD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAYpC,8BAAyB,GAAG,yDAAyD;QAMrF,mBAAc,GAAG,yDAAyD;QAK1E,sBAAiB,GAAG,yDAAyD;IAvBrC,CAAC;IAGzC,6BAAO,GAAP;QACE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnF,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAClD,CAAC;IAED,6BAAO,GAAP;QACE,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;IAC/D,CAAC;IAGD,iCAAW,GAAX,UAAY,QAAQ;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;IAID,iCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAGD,oCAAc,GAAd,UAAe,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IA5BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,WAAW,CA+BvB;IAAD,kBAAC;CAAA;AA/BuB;;;;;;;;;;;;ACNxB,+DAA+D,+I;;;;;;;;;;;ACA/D,yrF;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC0B;AAC7B;AACN;AACE;AAO3C;IAEE,wBAAmB,OAAqB,EAC9B,MAAc,EACd,aAA4B;QAFnB,YAAO,GAAP,OAAO,CAAc;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAQtC,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACpB,CAAC;SACH,CAAC,CAAC;IAfuC,CAAC;IAE3C,iCAAQ,GAAR;QACE,IAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAWD,sBAAI,oCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,oCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAED,iCAAQ,GAAR,UAAS,IAAY;QAArB,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACtC,UAAC,GAAQ;YACP,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG;gBACnB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;;gBAE3D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IA3CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,wGAAqC;;SAEtC,CAAC;+EAG4B,2DAAY;YACtB,sDAAM;YACC,wDAAa;OAJ3B,cAAc,CA6C1B;IAAD,qBAAC;CAAA;AA7C0B;;;;;;;;;;;;;;;;;;;ACXgB;AACO;AAKlD;IAEE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,aAAQ,GAAG,kDAAkD;IAFrB,CAAC;IAGzC,4BAAK,GAAL,UAAM,QAAQ;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAPU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;ACNzB,4CAA4C,+BAA+B,2BAA2B,0BAA0B,OAAO,KAAK,6CAA6C,ue;;;;;;;;;;;ACAzL,2hDAA2hD,6BAA6B,4uFAA4uF,iDAAiD,89CAA89C,0CAA0C,ioF;;;;;;;;;;;;;;;;;;;;;;ACA3yL;AACkB;AACD;AACN;AACpB;AACE;AAO3C;IAEE,wDAAwD;IACxD,+BAAmB,OAA4B,EACrC,MAAc,EACd,aAA4B;QAFnB,YAAO,GAAP,OAAO,CAAqB;QACrC,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAOtC,6CAA6C;QAC7C,qBAAgB,GAAG,IAAI,wDAAS,CAAC;YAC/B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxB,yDAAU,CAAC,QAAQ;gBACnB,+EAAsB,CAAC,kBAAkB;aAC1C,CAAC;YACF,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,yDAAU,CAAC,KAAK;gBAChB,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,aAAa,EAAE,IAAI,wDAAS,CAAC;gBAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;oBAC5B,yDAAU,CAAC,QAAQ;oBACnB,+EAAsB,CAAC,cAAc;iBACtC,CAAC;gBACF,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aAC1D,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACzC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IA1BuC,CAAC;IAG3C,2DAA2D;IAC3D,wCAAQ,GAAR;IACA,CAAC;IAuBD,6DAA6D;IAC7D,gDAAgB,GAAhB,UAAiB,IAAe;QAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE5C,IAAI,QAAQ,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,EAAE;YACrC,SAAS,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,CAAC;YACnE,OAAO,IAAI;SACZ;IACH,CAAC;IAGD,sBAAI,uCAAI;QADR,4CAA4C;aAC5C;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC;;;OAAA;IAED,sBAAI,wCAAK;aAAT;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC7D,CAAC;;;OAAA;IAED,sBAAI,kDAAe;aAAnB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACpE,CAAC;;;OAAA;IAED,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAED,sBAAI,yCAAM;aAAV;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7C,CAAC;;;OAAA;IAED,oCAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CACpC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC;QAC1C,CAAC,CACF;IACH,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI;YAC1C,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK;YACxC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ;YAC5D,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ;YAC9C,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM;SAC3C;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACnC,UAAC,GAAQ;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,CAAC,SAAS,EAAE;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aACvC;;gBAEC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAC1D,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IApGU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,6HAA4C;;SAE7C,CAAC;+EAI4B,yEAAmB;YAC7B,sDAAM;YACC,wDAAa;OAL3B,qBAAqB,CAsGjC;IAAD,4BAAC;CAAA;AAtGiC;;;;;;;;;;;;;;;;;;;ACZS;AACO;AAKlD;IAEE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,SAAI,GAAG;YACL,OAAO,EAAE,uBAAuB;SACjC,CAAC;QACF,qBAAgB,GAAG,mDAAmD;QACtE,gBAAW,GAAG,qDAAqD;IAN3B,CAAC;IAQzC,2CAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAQ,GAAR,UAAS,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAhBU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;;ACJhC;AAAA;AAAA,gEAAgE;AAChE;IAAA;IAeA,CAAC;IAdU,qCAAc,GAArB,UAAsB,OAAwB;QAC1C,IAAK,OAAO,CAAC,KAAgB,CAAC,MAAM,GAAG,CAAC;YACpC,OAAO;gBACH,cAAc,EAAE;oBACZ,cAAc,EAAE,CAAC;oBACjB,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM;iBACrC;aACJ;IACT,CAAC;IAEM,yCAAkB,GAAzB,UAA0B,OAAwB;QAC9C,IAAK,OAAO,CAAC,KAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3C,OAAO,EAAE,eAAe,EAAE,gCAAgC,EAAE;IACpE,CAAC;IACL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;AClBD,+DAA+D,uK;;;;;;;;;;;ACA/D,i9CAAi9C,YAAY,ukHAAukH,iDAAiD,6tCAA6tC,0CAA0C,+V;;;;;;;;;;;;;;;;;;;;;;ACA1yM;AACkB;AACV;AACf;AAEsC;AACxC;AAOzC;IAEE,gCAAoB,WAAwB,EAAU,MAAc,EAAU,aAA4B;QAAtF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAK1G,sBAAiB,GAAG,IAAI,wDAAS,CAAC;YAChC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1B,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,aAAa,EAAE,IAAI,wDAAS,CAAC;gBAC3B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;oBAC5B,yDAAU,CAAC,QAAQ;oBACnB,4FAAsB,CAAC,cAAc;iBACtC,CAAC;gBACF,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aAC1D,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC1C,CAAC,CAAC;IAvB2G,CAAC;IAE/G,yCAAQ,GAAR;IACA,CAAC;IAsBC,6DAA6D;IAC7D,iDAAgB,GAAhB,UAAiB,IAAe;QAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE5C,IAAI,QAAQ,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,EAAE;YACrC,SAAS,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,CAAC;YACnE,OAAO,IAAI;SACZ;IACH,CAAC;IAEH,sBAAI,4CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAI,0CAAM;aAAV;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAED,sBAAI,+CAAW;aAAf;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACjE,CAAC;;;OAAA;IAED,sBAAI,4CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAC9D,CAAC;;;OAAA;IAED,sBAAI,mDAAe;aAAnB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACrE,CAAC;;;OAAA;IAKD,yCAAQ,GAAR,UAAS,KAAU;QAAnB,iBAYC;QAXC,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;QAC3C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1C,UAAC,GAAQ;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC/B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACvB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ;YAC/C,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM;SAC5C;QACD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1C,UAAC,GAAQ;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACvB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ;YAC/C,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW;YACnE,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ;SACjE;QACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAC7C,UAAC,GAAQ;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;YAC3E,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IA3GU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,mIAA8C;;SAE/C,CAAC;+EAGiC,uEAAW,EAAkB,sDAAM,EAAyB,wDAAa;OAF/F,sBAAsB,CA6GlC;IAAD,6BAAC;CAAA;AA7GkC;;;;;;;;;;;;ACbnC,uBAAuB,yBAAyB,eAAe,gBAAgB,mBAAmB,GAAG,6CAA6C,uY;;;;;;;;;;;ACAlJ,42B;;;;;;;;;;;;;;;;;;ACAkD;AACD;AAOjD;IAEE,uBAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAG2B,8DAAc;OAF9B,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;ACR1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  admin works!\\n  <a routerLink=\\\"/home\\\" class=\\\"nav-link\\\">Go back</a>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ResetPasswordComponent } from './user/reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'registration', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'reset-password', component: ResetPasswordComponent}\n    ]\n  },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard], data: { permittedRoles: ['Admin'] } }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n\\t<meta charset=\\\"utf-8\\\" />\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css\\\">\\n\\t<title></title>\\n</head>\\n\\n<body>\\n    <app-header></app-header>\\n    <router-outlet></router-outlet>\\n</body>\\n\\n</html>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FunAngular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ToastrModule } from 'ngx-toastr'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './user/login/login.component';\n\nimport { RegistrationService } from './user/registration/registration.service';\nimport { LoginService } from './user/login/login.service';\nimport { HomeComponent } from './home/home.component';\nimport { HomeService } from './home/home.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AdminComponent } from './admin/admin.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ResetPasswordComponent } from './user/reset-password/reset-password.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    AdminComponent,\n    ForbiddenComponent,\n    HeaderComponent,\n    ResetPasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [RegistrationService, LoginService, HomeService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private toastrService: ToastrService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null) {\n      let roles = next.data['permittedRoles'] as Array<string>;\n      if (roles) {\n        if (this.roleMatch(roles))\n          return true;\n        else {\n          this.router.navigate(['/forbidden']);\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      this.router.navigate(['/user/login']);\n      this.toastrService.warning('Please login');\n      return false;\n    }\n  }\n\n  roleMatch(allowedRoles): boolean {\n    var isMatch = false;\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\n    var userRoles = payLoad.role\n    allowedRoles.forEach(element => {\n      if (userRoles == element) {\n        isMatch = true;\n        return false;\n      }\n    });\n    return isMatch;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { normalizeStyles } from '@angular/animations/browser/src/util';\n\n\n//Every api need the token to authenticate the user, or use (auth.interceptor)\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (localStorage.getItem('token') != null) {\n            const clonedReq = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n            });\n            return next.handle(clonedReq).pipe(\n                tap(\n                    succ => { },\n                    err => {\n                        if (err.status == 401) {\n                            localStorage.removeItem('token')\n                            this.router.navigate(['/user/login']);\n                        }\n                        else if(err.status == 403){\n                            this.router.navigate(['/forbidden']);\n                        }\n                    }\n                )\n            )\n        }\n        else\n            return next.handle(req.clone());\n    };\n}","module.exports = \".vertical-center{\\n    vertical-align: -webkit-baseline-middle;\\n}\\n.nav-right{\\n    display: flex;\\n    align-items: center;\\n    flex: 0 1 auto;\\n    margin-left: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1Q0FBdUM7QUFDM0M7QUFDQTtJQUdJLGFBQWE7SUFHYixtQkFBbUI7SUFHbkIsY0FBYztJQUNkLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZlcnRpY2FsLWNlbnRlcntcbiAgICB2ZXJ0aWNhbC1hbGlnbjogLXdlYmtpdC1iYXNlbGluZS1taWRkbGU7XG59XG4ubmF2LXJpZ2h0e1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAxIGF1dG87XG4gICAgZmxleDogMCAxIGF1dG87XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG59Il19 */\"","module.exports = \"<div class=\\\"pt-2 pb-2\\\" style=\\\"background-color:#222831\\\">\\n  <nav class=\\\"nav\\\">\\n    <!-- Login Location -->\\n    <div class=\\\"logo\\\">\\n      <a href=\\\"/\\\" aria-label=\\\"FunAnguler\\\">\\n        <img class=\\\"ml-2 mr-2 vertical-center\\\" src=\\\"../../../favicon.ico\\\">\\n      </a>\\n    </div>\\n\\n    <!-- Nav Left Position -->\\n    <div class=\\\"nav-left vertical-center\\\">\\n      <a *ngIf=\\\"isLogedIn && isAdmin\\\" routerLink=\\\"/admin\\\" class=\\\"nav-link\\\">Admin</a>\\n    </div>\\n\\n    <!-- Nav Right Position -->\\n    <div class=\\\"nav-right\\\">\\n      <a *ngIf=\\\"!isLogedIn; else notLogedIn\\\" class=\\\"app-btn vertical-center\\\" routerLink='/user/login' href=\\\"#\\\" rel=\\\"nofollow\\\">\\n        <span>Login</span>\\n      </a>\\n      <ng-template #notLogedIn>\\n        <a class=\\\"app-btn vertical-center\\\" routerLink='' (click)=\\\"onLogout()\\\">Logout</a>\\n      </ng-template>\\n    </div>\\n  </nav>\\n</div>\"","import { Component, OnInit, OnChanges, DoCheck } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, DoCheck {\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private toastrService: ToastrService) { }\n\n  isAdmin: boolean;\n  isLogedIn: boolean;\n\n  ngOnInit() {  }\n\n  ngDoCheck(){\n    this.isLogedIn = this.userService.isLogIn();\n    if(this.isLogedIn){\n      this.isAdmin = this.userService.isAdmin();\n    }\n  }\n\n\n  onLogin(){\n    this.isLogedIn = this.userService.isLogIn();\n  }\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/user/login']);\n    this.toastrService.success('Logout successfully');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmJpZGRlbi9mb3JiaWRkZW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  You don't have the perssion to access this page!!!\\n  <a routerLink=\\\"/home\\\" class=\\\"nav-link\\\">Go back</a>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.css']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card m-5\\\" style=\\\"width:18rem\\\" *ngIf=\\\"userDetails\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"><strong>Username: </strong>{{userDetails.userName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Email: </strong>{{userDetails.email}}</li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { HomeService } from './home.service';\nimport { UserService } from '../shared/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router, \n    private toastrService: ToastrService, \n    private service: HomeService,\n    private userService: UserService) { }\n\n  userDetails;\n\n  isAdmin;\n\n  ngOnInit() {\n    this.service.getUserProfile().subscribe(\n      res => { this.userDetails = res },\n      err => {\n        console.log(err);\n      }\n    )\n\n    this.isAdmin = this.userService.isAdmin();\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n  Url = \"http://localhost:59372/api/UserProfile\"\n\n  getUserProfile() {\n    return this.http.get(this.Url)\n\n\n    //Every api need the token to authenticate the user, or use (auth.interceptor)\n    // var tokenHeader = new HttpHeaders({ 'Authorization': 'Bearer ' + localStorage.getItem('token') });\n    // return this.http.get(this.Url, { headers: tokenHeader });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n  \n\n  isAdmin(){\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\n    return (payLoad.role == \"Admin\") ? true : false;\n  }\n\n  isLogIn(){\n    return (localStorage.getItem('token')) != null ? true : false\n  }\n\n  getUserSecurityQuetionURL = 'http://localhost:59372/api/ApplicationUser/Get-Question'\n  getQuestion(userName){\n    return this.http.post(this.getUserSecurityQuetionURL, userName);\n  }\n\n\n  checkAnswerUrl = 'http://localhost:59372/api/ApplicationUser/Check-Answer'\n  checkAnswer(body){\n    return this.http.post(this.checkAnswerUrl, body);\n  }\n\n  changePasswordUrl = 'http://localhost:59372/api/ApplicationUser/New-Password'\n  changePassword(body){\n    return this.http.post(this.changePasswordUrl, body);\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"loginForm\\\" #form='ngForm' class=\\\"form-horizontal\\\" role=\\\"form\\\" method=\\\"POST\\\"\\n  (submit)=\\\"onSubmit(form)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <h2>Please Login</h2>\\n      <hr>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group has-danger\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n          <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-user\\\"></i></div>\\n          <input formControlName=\\\"userName\\\" type=\\\"text\\\" name=\\\"userName\\\" class=\\\"form-control\\\" id=\\\"userName\\\"\\n            placeholder=\\\"John Doe\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"userName.touched && userName.invalid\\\" class=\\\"col-md-3\\\">\\n      <div *ngIf=\\\"userName.errors.required\\\" class=\\\"form-control-feedback\\\">\\n        <span class=\\\"text-danger align-middle\\\">\\n          User name is required\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n          <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n          <input formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n            placeholder=\\\"Password\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"col-md-3\\\">\\n      <div *ngIf=\\\"password.errors.required\\\" class=\\\"form-control-feedback\\\">\\n        <span class=\\\"text-danger align-middle\\\">\\n          password is required\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\" style=\\\"padding-top: .35rem\\\">\\n      <div class=\\\"form-check mb-2 mr-sm-2 mb-sm-0\\\">\\n        <label class=\\\"form-check-label\\\">\\n          <input class=\\\"form-check-input\\\" name=\\\"remember\\\" type=\\\"checkbox\\\">\\n          <span style=\\\"padding-bottom: .15rem\\\">Remember me</span>\\n        </label>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" style=\\\"padding-top: 1rem\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-sign-in\\\"></i>\\n        Login</button>\\n      <a class=\\\"btn btn-link\\\" routerLinkActive='active' routerLink='/user/reset-password' href=\\\"#\\\">Forgot Your\\n        Password?</a>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public service: LoginService,\n    private router: Router,\n    private toastrService: ToastrService) { }\n\n  ngOnInit() {\n    if(localStorage.getItem('token') != null){\n      this.router.navigate(['/home']);\n    }\n  }\n\n  loginForm = new FormGroup({\n    userName: new FormControl('', [\n      Validators.required\n    ]),\n    password: new FormControl('', [\n      Validators.required\n    ])\n  });\n\n  get userName() {\n    return this.loginForm.get('userName');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.toastrService.success('Login Successful!!!');\n        this.router.navigate(['/home'])\n      },\n      err => {\n        if (err.status == 400)\n          this.toastrService.error('Incorrect username or password');\n        else\n          console.log(err);\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  loginUrl = 'http://localhost:59372/api/ApplicationUser/Login'\n  login(formData){\n    return this.http.post(this.loginUrl, formData);\n  }\n}\n","module.exports = \"@media(min-width: 768px) {\\n    .field-label-responsive {\\n      padding-top: .5rem;\\n      text-align: right;\\n    }\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9yZWdpc3RyYXRpb24vcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtNQUNFLGtCQUFrQjtNQUNsQixpQkFBaUI7SUFDbkI7RUFDRiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuZmllbGQtbGFiZWwtcmVzcG9uc2l2ZSB7XG4gICAgICBwYWRkaW5nLXRvcDogLjVyZW07XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <form [formGroup]=\\\"registrationForm\\\" #f=\\\"ngForm\\\" role=\\\"form\\\" method=\\\"POST\\\" (submit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <h2>Register New User</h2>\\n                <hr>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n                <label for=\\\"name\\\">Username</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-user\\\"></i></div>\\n                        <input formControlName=\\\"name\\\" type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                            placeholder=\\\"John Doe\\\" required>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"name.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        Name is required\\n                    </span>\\n                </div>\\n                <div *ngIf=\\\"name.errors.spaceNotAllowed\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        {{name.errors.spaceNotAllowed}}\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n                <label for=\\\"email\\\">E-Mail Address</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\n                        <input formControlName=\\\"email\\\" type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                            placeholder=\\\"you@example.com\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"email.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        Email is required\\n                    </span>\\n                </div>\\n                <div *ngIf=\\\"email.errors.email\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        Please provide a valide Email\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div formGroupName=\\\"matchPassword\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\n                                id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"col-md-3\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                        <span class=\\\"text-danger align-middle\\\">\\n                            Password is required\\n                        </span>\\n                    </div>\\n                    <div *ngIf=\\\"password.errors.passwordLength\\\" class=\\\"form-control-feedback\\\">\\n                        <span class=\\\"text-danger align-middle\\\">\\n                            Minimum password length is {{ password.errors.passwordLength.requiredLength }}\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 field-label-responsive\\\">\\n                    <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group has-danger\\\">\\n                        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                            <input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\"\\n                                class=\\\"form-control\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\" class=\\\"col-md-3\\\">\\n                    <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                        <span class=\\\"text-danger align-middle\\\">\\n                            Password is required\\n                        </span>\\n                    </div>\\n                    <div *ngIf=\\\"confirmPassword.errors.passwordMissmatch\\\" class=\\\"form-control-feedback\\\">\\n                        <span class=\\\"text-danger align-middle\\\">\\n                            {{confirmPassword.errors.passwordMissmatch}}\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n                <label for=\\\"question\\\">Question</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-question\\\"></i></div>\\n                        <input formControlName=\\\"question\\\" type=\\\"text\\\" name=\\\"question\\\" class=\\\"form-control\\\" id=\\\"question\\\"\\n                            placeholder=\\\"what is your favorite color...\\\" required>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"question.touched && question.invalid\\\" class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"question.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        Security question is required.\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n                <label for=\\\"answer\\\">Answer</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                        <input formControlName=\\\"answer\\\" type=\\\"text\\\" name=\\\"answer\\\" class=\\\"form-control\\\" id=\\\"answer\\\"\\n                            placeholder=\\\"Blue\\\" required>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"answer.touched && answer.invalid\\\" class=\\\"col-md-3\\\">\\n                <div *ngIf=\\\"answer.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                    <span class=\\\"text-danger align-middle\\\">\\n                        Answer is required.\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"!registrationForm.valid\\\" class=\\\"btn btn-success\\\"><i\\n                        class=\\\"fa fa-user-plus\\\"></i> Register</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\\n\\n<button (click)=\\\"test()\\\">test</button>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RegistrationValidators } from './registration.validators';\nimport { RegistrationService } from './registration.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  //inject the desired service, can be as many as you want\n  constructor(public service: RegistrationService,\n    private router: Router,\n    private toastrService: ToastrService) { }\n\n\n  //put code where you want to excute when the page is loaded\n  ngOnInit() {\n  }\n\n  //could use form builder to simpler the code \n  registrationForm = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      RegistrationValidators.cannotContainSpace,\n    ]),\n    email: new FormControl('', [\n      Validators.email,\n      Validators.required\n    ]),\n    matchPassword: new FormGroup({\n      password: new FormControl('', [\n        Validators.required,\n        RegistrationValidators.passwordLength\n      ]),\n      confirmPassword: new FormControl('', Validators.required)\n    }, { validators: this.comparePasswords }),\n    question: new FormControl('', Validators.required),\n    answer: new FormControl('', Validators.required)\n  });\n\n  //custome validator within the same file as where it is used \n  comparePasswords(form: FormGroup) {\n    let password = form.get('password');\n    let confirmPs = form.get('confirmPassword');\n\n    if (password.value != confirmPs.value) {\n      confirmPs.setErrors({ passwordMissmatch: 'Password is not match' })\n      return null\n    }\n  }\n\n  //use this can let the html became less mass\n  get name() {\n    return this.registrationForm.get('name');\n  }\n\n  get email() {\n    return this.registrationForm.get('email');\n  }\n\n  get password() {\n    return this.registrationForm.get('matchPassword.password');\n  }\n\n  get confirmPassword() {\n    return this.registrationForm.get('matchPassword.confirmPassword');\n  }\n\n  get question(){\n    return this.registrationForm.get('question');\n  }\n\n  get answer(){\n    return this.registrationForm.get('answer');\n  }\n\n  test() {\n    this.service.validateEmail().subscribe(\n      res => {\n        console.log(res);\n        this.toastrService.success('Welcome!!!')\n      }\n    )\n  }\n\n  onSubmit() {\n    let body = {\n      UserName: this.registrationForm.value.name,\n      Email: this.registrationForm.value.email,\n      Password: this.registrationForm.value.matchPassword.password,\n      Question: this.registrationForm.value.question,\n      Answer: this.registrationForm.value.answer\n    }\n    this.service.register(body).subscribe(\n      (res: any) => {\n        console.log(res);\n        if (res.succeeded) {\n          this.toastrService.success('Welcome!!!');\n          this.router.navigate(['/user/login']);\n        }\n        else\n          this.toastrService.warning(res.errors[0].description);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private http: HttpClient) { }\n\n  test = {\n    \"Email\": \"qianhao.liu@gmail.com\",\n  };\n  validateEmailUrl = 'http://localhost:59372/api/ApplicationUser/unique'\n  registerUrl = 'http://localhost:59372/api/ApplicationUser/Register'\n\n  validateEmail() {\n    return this.http.post(this.validateEmailUrl, this.test);\n  }\n\n  register(body) {\n    return this.http.post(this.registerUrl, body);\n  }\n\n}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\n//custome validator stors in different file as where it is used \nexport class RegistrationValidators {\n    static passwordLength(control: AbstractControl): ValidationErrors | null {\n        if ((control.value as string).length < 6)\n            return {\n                passwordLength: {\n                    requiredLength: 6,\n                    actualLength: control.value.length\n                }\n            }\n    }\n\n    static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\n        if ((control.value as string).indexOf(' ') >= 0)\n            return { spaceNotAllowed: 'Username can not contain space' }\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"resetPasswordForm\\\" #form='ngForm' class=\\\"form-horizontal\\\" role=\\\"form\\\" method=\\\"POST\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <h2>Please Entre your Usename</h2>\\n      <hr>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group has-danger\\\">\\n        <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n          <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-user\\\"></i></div>\\n          <input formControlName=\\\"userName\\\" type=\\\"text\\\" name=\\\"userName\\\" class=\\\"form-control\\\" id=\\\"userName\\\"\\n            placeholder=\\\"John Doe\\\" (keyup)=\\\"findUser($event)\\\" required>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"userName.touched && userName.invalid\\\" class=\\\"col-md-3\\\">\\n      <div *ngIf=\\\"userName.errors.required\\\" class=\\\"form-control-feedback\\\">\\n        <span class=\\\"text-danger align-middle\\\">\\n          User name is required\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf='Question != null'>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-question\\\"></i></div>\\n            <p id=\\\"Question\\\">{{ Question }}?</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group has-danger\\\">\\n          <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n            <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n            <input formControlName=\\\"answer\\\" type=\\\"text\\\" name=\\\"answer\\\" class=\\\"form-control\\\" id=\\\"answer\\\" required>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"answer.touched && answer.invalid else check\\\" class=\\\"col-md-3\\\">\\n        <div *ngIf=\\\"answer.errors.required\\\" class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            Answer is required\\n          </span>\\n        </div>\\n      </div>\\n      <ng-template #check>\\n        <button *ngIf='!answer.invalid' type=\\\"button\\\" class=\\\"app-btn vertical-center\\\" [disabled]=\\\"!answer.valid\\\"\\n          (click)=\\\"checkAnswer()\\\">Check Answer</button>\\n      </ng-template>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div *ngIf=\\\"IncorrectAnswer == true\\\" class=\\\"col-md-6\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n          <span class=\\\"text-danger align-middle\\\">\\n            Incorrect answer\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"IncorrectAnswer == false\\\" formGroupName=\\\"matchPassword\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n              <label for=\\\"oldPassword\\\">Old Password</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group has-danger\\\">\\n                <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                  <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                  <input formControlName=\\\"oldPassword\\\" type=\\\"password\\\" name=\\\"oldPassword\\\" class=\\\"form-control\\\" id=\\\"oldPassword\\\"\\n                    placeholder=\\\"Old password\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"oldPassword.touched && oldPassword.invalid\\\" class=\\\"col-md-3\\\">\\n              <div *ngIf=\\\"oldPassword.errors.required\\\" class=\\\"form-control-feedback\\\">\\n                <span class=\\\"text-danger align-middle\\\">\\n                  Password is required\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 field-label-responsive\\\">\\n          <label for=\\\"password\\\">Password</label>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group has-danger\\\">\\n            <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n              <input formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                placeholder=\\\"Password\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"col-md-3\\\">\\n          <div *ngIf=\\\"password.errors.required\\\" class=\\\"form-control-feedback\\\">\\n            <span class=\\\"text-danger align-middle\\\">\\n              Password is required\\n            </span>\\n          </div>\\n          <div *ngIf=\\\"password.errors.passwordLength\\\" class=\\\"form-control-feedback\\\">\\n            <span class=\\\"text-danger align-middle\\\">\\n              Minimum password length is {{ password.errors.passwordLength.requiredLength }}\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 field-label-responsive\\\">\\n          <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group has-danger\\\">\\n            <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n              <input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\" class=\\\"form-control\\\"\\n                id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid else newPassword\\\" class=\\\"col-md-3\\\">\\n          <div *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"form-control-feedback\\\">\\n            <span class=\\\"text-danger align-middle\\\">\\n              Password is required\\n            </span>\\n          </div>\\n          <div *ngIf=\\\"confirmPassword.errors.passwordMissmatch\\\" class=\\\"form-control-feedback\\\">\\n            <span class=\\\"text-danger align-middle\\\">\\n              {{confirmPassword.errors.passwordMissmatch}}\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n      <ng-template #newPassword>\\n        <button *ngIf='!confirmPassword.invalid' type=\\\"button\\\" class=\\\"app-btn vertical-center\\\" [disabled]=\\\"!answer.valid\\\"\\n          (click)=\\\"changePassword()\\\">Change password</button>\\n      </ng-template>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { THROW_IF_NOT_FOUND } from '@angular/core/src/di/injector';\nimport { RegistrationValidators } from '../registration/registration.validators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router, private toastrService: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  resetPasswordForm = new FormGroup({\n    userName: new FormControl('', [\n      Validators.required\n    ]),\n    question: new FormControl('', [\n      Validators.required\n    ]),\n    answer: new FormControl('', [\n      Validators.required\n    ]),\n    matchPassword: new FormGroup({\n      oldPassword: new FormControl('', Validators.required),\n      password: new FormControl('', [\n        Validators.required,\n        RegistrationValidators.passwordLength\n      ]),\n      confirmPassword: new FormControl('', Validators.required)\n    }, { validators: this.comparePasswords })\n  });\n\n    //custome validator within the same file as where it is used \n    comparePasswords(form: FormGroup) {\n      let password = form.get('password');\n      let confirmPs = form.get('confirmPassword');\n  \n      if (password.value != confirmPs.value) {\n        confirmPs.setErrors({ passwordMissmatch: 'Password is not match' })\n        return null\n      }\n    }\n\n  get userName() {\n    return this.resetPasswordForm.get('userName');\n  }\n\n  get answer() {\n    return this.resetPasswordForm.get('answer');\n  }\n\n  get oldPassword() {\n    return this.resetPasswordForm.get('matchPassword.oldPassword');\n  }\n\n  get password() {\n    return this.resetPasswordForm.get('matchPassword.password');\n  }\n\n  get confirmPassword() {\n    return this.resetPasswordForm.get('matchPassword.confirmPassword');\n  }\n\n  Question;\n  IncorrectAnswer;\n\n  findUser(event: any) {\n    let body = { Username: event.target.value }\n    this.userService.getQuestion(body).subscribe(\n      (res: any) => {\n        console.log(res.question);\n        this.Question = res.question;\n      },\n      err => {\n        console.log(err.error);\n        this.Question = null;\n        this.toastrService.success(err.error);\n      });\n  }\n\n  checkAnswer(){\n    let body = {\n      Username: this.resetPasswordForm.value.userName,\n      Question: this.Question,\n      Answer: this.resetPasswordForm.value.answer\n    }\n    this.userService.checkAnswer(body).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.IncorrectAnswer = false;\n      },\n      err => {\n        console.log(err.error);\n        this.IncorrectAnswer = true;\n      });\n  }\n\n  changePassword(){\n    let body = {\n      Username: this.resetPasswordForm.value.userName,\n      OldPassword: this.resetPasswordForm.value.matchPassword.oldPassword,\n      NewPassword: this.resetPasswordForm.value.matchPassword.password\n    }\n    this.userService.changePassword(body).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.toastrService.success('You have successfully changed your password!');\n        this.router.navigate(['/user/login']);\n      },\n      err => {\n        console.log(err.error);\n      });\n  }\n\n}\n","module.exports = \".mid{\\n    position: absolute;\\n    top: 35%;\\n    left: 34%;\\n    width: 45rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWlke1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDM1JTtcbiAgICBsZWZ0OiAzNCU7XG4gICAgd2lkdGg6IDQ1cmVtO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"card border-dark mb-3 mid\\\">\\n      <div class=\\\"card-header\\\">\\n            <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\n                  <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLinkActive='active' routerLink='/user/login' href=\\\"#\\\">Sign IN</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLinkActive='active' routerLink='/user/registration' href=\\\"#\\\">Sign Up</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLinkActive='active' routerLink='/user/reset-password' href=\\\"#\\\">Reset Password</a>\\n                  </li>\\n            </ul>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n            <router-outlet></router-outlet>\\n      </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}